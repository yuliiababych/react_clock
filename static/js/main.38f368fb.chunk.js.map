{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","timer","this","window","setInterval","newTime","setState","console","info","clearInterval","className","props","name","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerId","handleContextMenu","event","preventDefault","handleMouseClick","document","addEventListener","_","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFtD,EAKEC,MAAQ,EALV,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,IAAMC,GAAU,IAAIP,MAAOC,cAAcC,OAAO,IAAK,GAErD,EAAKM,SAAS,CAAET,YAAaQ,IAG7BE,QAAQC,KAAKH,KACZ,OAfP,kCAkBE,WACEF,OAAOM,cAAcP,KAAKD,SAnB9B,oBAsBE,WACE,OACE,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,KAAKS,MAAMC,OAGb,YAED,sBAAMF,UAAU,cAAhB,SACGR,KAAKN,MAAMC,qBAhCtB,GAA2BgB,IAAMC,WCFjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAUX,IAAMG,EAAb,4MACEvB,MAAe,CACbwB,UAAU,EACVC,UAAW,WAHf,EAMEC,aANF,IA+BEC,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAKnB,SAAS,CAAEc,UAAU,KAlC9B,EAqCEM,iBAAmB,WACZ,EAAK9B,MAAMwB,UACd,EAAKd,SAAS,CAAEc,UAAU,KAvChC,uDAQE,WAA2B,IAAD,OACxBlB,KAAKoB,QAAUnB,OAAOC,aAAY,WAChC,EAAKE,SAAS,CAAEe,UAAWN,QAC1B,MAEHY,SAASC,iBAAiB,cAAe1B,KAAKqB,mBAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,oBAd5C,gCAiBE,SAAmBG,EAAOC,GACpB5B,KAAKN,MAAMwB,UAAYlB,KAAKN,MAAMyB,YAAcS,EAAUT,WAE5Dd,QAAQwB,MAAR,uBAA8BD,EAAUT,UAAxC,eAAwDnB,KAAKN,MAAMyB,cApBzE,kCAwBE,WACElB,OAAOM,cAAcP,KAAKoB,SAE1BK,SAASK,oBAAoB,cAAe9B,KAAKqB,mBACjDI,SAASK,oBAAoB,QAAS9B,KAAKwB,oBA5B/C,oBA2CE,WACE,OACE,sBAAKhB,UAAU,MAAf,UACE,6CAECR,KAAKN,MAAMwB,UAAY,cAAC,EAAD,CAAOR,KAAMV,KAAKN,MAAMyB,mBAhDxD,GAAyBR,IAAMC,WCd/BmB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.38f368fb.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timer = 0;\n\n  componentDidMount(): void {\n    this.timer = window.setInterval(() => {\n      const newTime = new Date().toUTCString().slice(-12, -4);\n\n      this.setState({ currentTime: newTime });\n\n      // eslint-disable-next-line no-console\n      console.info(newTime);\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId: number | undefined;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleMouseClick);\n  }\n\n  componentDidUpdate(_: {}, prevState: Readonly<State>): void {\n    if (this.state.hasClock && this.state.clockName !== prevState.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleMouseClick);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleMouseClick = () => {\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}